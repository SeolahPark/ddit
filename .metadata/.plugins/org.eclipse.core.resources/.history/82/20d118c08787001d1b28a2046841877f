package board.dao;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import com.ibatis.sqlmap.client.SqlMapClient;

import config.SqlMapClientFactory;
import vo.BoardCommentVO;
import vo.BoardVO;

public class BoardDAO implements IBoardDAO {
	private static IBoardDAO instance = null;
	private SqlMapClient smc = null;
	private BoardDAO() {
		smc = SqlMapClientFactory.getSqlMapClient();
	}
	public static IBoardDAO getInstance() {
		if(instance == null) instance = new BoardDAO();
		return instance;
	}
	
	@Override
	public List<BoardVO> getAllBoardList(Map<String, Object> map) {
		List<BoardVO> list = new ArrayList<BoardVO>();
		try {
			list = smc.queryForList("board.getAllBoardList",map);
		} catch (SQLException e) {
			System.out.println("getAllBoardList 오류");
			e.printStackTrace();
		}
		return list;
	}

	@Override
	public BoardVO getBoard(int boardNo) {
		BoardVO vo = new BoardVO();
		try {
			vo = (BoardVO) smc.queryForObject("board.getBoard", boardNo);
		} catch (SQLException e) {
			System.out.println("getBoard 오류");
			e.printStackTrace();
		}
		return vo;
	}
	
	@Override
	public void setCountIncrement(int boardNo) {
		try {
			smc.update("board.setCountIncrement",boardNo);
		} catch (SQLException e) {
			System.out.println("setCountIncrement 오류");
			e.printStackTrace();
		}
	}
	
	@Override
	public int getTotalCount(Map<String, Object> map){
		int num = 0;
		try {
			num = (int) smc.queryForObject("board.getTotalCount", map);
		} catch (SQLException e) {
			System.out.println("getTotalCount 오류");
			e.printStackTrace();
		}
		return num;
	}
	
	@Override
	public int insertBoard(BoardVO vo) {
		int num = 0;
		try {
			num = (int) smc.insert("board.insertBoard", vo);
		} catch (SQLException e) {
			System.out.println("insertBaord 오류");
			e.printStackTrace();
		}
		return num;
	}
	
	@Override
	public void deleteBoard(int boardNo) {
		try {
			smc.delete("board.deleteBoard", boardNo);
		} catch (SQLException e) {
			System.out.println("deleteBoard 오류");
			e.printStackTrace();
		}
	}
	
	@Override
	public void updateBoard(BoardVO vo) {
		try {
			smc.update("board.updateBoard", vo);
		} catch (SQLException e) {
			System.out.println("updateBoard 오류");
			e.printStackTrace();
		}
	}
	
	@Override
	public void insertComment(BoardCommentVO vo) {
		try {
			Object obj = smc.insert("board.insertComment", vo);
			if(obj == null) {
				System.out.println("등록성공");
			}
		} catch (SQLException e) {
			System.out.println("insertComment 오류");
			e.printStackTrace();
		}
	}
	@Override
	public List<BoardCommentVO> selectComment(int boardNo) {
		List<BoardCommentVO> list = new ArrayList<BoardCommentVO>();
		try {
			list = smc.queryForList("board.selectComment",boardNo);
		} catch (SQLException e) {
			System.out.println("selectComment 오류");
			e.printStackTrace();
		}
		return list;
	}
	
	
}
