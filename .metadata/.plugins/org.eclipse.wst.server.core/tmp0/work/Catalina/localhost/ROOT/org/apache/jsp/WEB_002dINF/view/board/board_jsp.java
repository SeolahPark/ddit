/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2022-12-18 08:58:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import vo.MemberVO;
import java.util.HashMap;
import java.util.Map;
import vo.BoardVO;
import java.text.DecimalFormat;
import java.util.List;

public final class board_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("java.util.Map");
    _jspx_imports_classes.add("vo.BoardVO");
    _jspx_imports_classes.add("java.text.DecimalFormat");
    _jspx_imports_classes.add("java.util.HashMap");
    _jspx_imports_classes.add("vo.MemberVO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"kr\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<title>MORAM MORAM</title>\r\n");
      out.write("<meta content=\"width=device-width, initial-scale=1.0\" name=\"viewport\">\r\n");
      out.write("<meta content=\"\" name=\"keywords\">\r\n");
      out.write("<meta content=\"\" name=\"description\">\r\n");
      out.write("<!--       Favicon   -->\r\n");
      out.write("<link href=\"");
      out.print(request.getContentType() );
      out.write("/img/favicon.ico\" rel=\"icon\">\r\n");
      out.write("\r\n");
      out.write("<!--       Google Web Fonts   -->\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css2?family=Heebo:wght@400;500;600;700&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("<!--       Icon Font Stylesheet   -->\r\n");
      out.write("<link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css\" rel=\"stylesheet\">\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.4.1/font/bootstrap-icons.css\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("<!--       Libraries Stylesheet   -->\r\n");
      out.write("<link href=\"");
      out.print(request.getContextPath() );
      out.write("/lib/animate/animate.min.css\" rel=\"stylesheet\">\r\n");
      out.write("<link href=\"");
      out.print(request.getContextPath());
      out.write("/lib/owlcarousel/assets/owl.carousel.min.css\" rel=\"stylesheet\">\r\n");
      out.write("<link href=\"");
      out.print(request.getContextPath());
      out.write("/lib/tempusdominus/css/tempusdominus-bootstrap-4.min.css\" rel=\"stylesheet\" />\r\n");
      out.write("\r\n");
      out.write("<!--       Customized Bootstrap Stylesheet   -->\r\n");
      out.write("<link href=\"");
      out.print(request.getContextPath());
      out.write("/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("<!--       Template Stylesheet   -->\r\n");
      out.write("<link href=\"");
      out.print(request.getContextPath());
      out.write("/css/style.css\" rel=\"stylesheet\">\r\n");
      out.write("<script src='");
      out.print(request.getContextPath());
      out.write("/js/jquery-3.6.1.min.js'></script>\r\n");
      out.write("</head>\r\n");
  
List<BoardVO> boardList = (List<BoardVO>) request.getAttribute("boardList");
int categoryNo = (int)session.getAttribute("boardCategoryNo");
MemberVO memberVo = new MemberVO();

String boardCategory = "";
if(categoryNo == 1){
	boardCategory = "공지사항";
}else if(categoryNo == 2){
	boardCategory = "문의게시판";
}else if(categoryNo == 3){
	boardCategory = "후기게시판";
}else if(categoryNo == 4){
	boardCategory = "홍보게시판";
}else if(categoryNo == 5){
	boardCategory = "자유게시판";
}

      out.write("\r\n");
      out.write("<style>\r\n");
      out.write(".content boardList{\r\n");
      out.write("\twidth: width: calc(100% - 1%);\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<script>  \r\n");
      out.write("$(function(){\r\n");
      out.write("   $('.prev').on('click', function() {\r\n");
      out.write("\t\tcurrentpage = parseInt($('.pnums').first().text().trim()) - 1;\r\n");
      out.write("\t\tlocation.href = \"");
      out.print(request.getContextPath());
      out.write("/board/List.do?page=\"+currentpage; \r\n");
      out.write("\t});\r\n");
      out.write("   \r\n");
      out.write("   $('.pnums').on('click', function() {\r\n");
      out.write("\t\tcurrentpage = parseInt($(this).text().trim());\r\n");
      out.write("\t\tlocation.href = \"");
      out.print(request.getContextPath());
      out.write("/board/List.do?page=\"+currentpage; \r\n");
      out.write("\t});\r\n");
      out.write("   \r\n");
      out.write("   $('.next').on('click', function() {\r\n");
      out.write("\t\tcurrentpage = parseInt($('.pnums').last().text().trim()) + 1;\r\n");
      out.write("\t\tlocation.href = \"");
      out.print(request.getContextPath());
      out.write("/board/List.do?page=\"+currentpage; \r\n");
      out.write("\t});\r\n");
      out.write("   \r\n");
      out.write("   $(\"#searchMy\").on(\"click\", function(){\r\n");
      out.write("\t\tvstype = $('#stype').val();\r\n");
      out.write("\t\tvsword = $('#sword').val();\r\n");
      out.write("\t\tlocation.href = \"");
      out.print(request.getContextPath());
      out.write("/board/List.do?page=1&stype=\" + vstype + \"&sword=\" + vsword;\r\n");
      out.write("\t});\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("<body>\r\n");
      out.write("\t<!-- header.jsp include -->\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../../../header.jsp", out, false);
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t<div class=\"container-xxl position-relative bg-white d-flex p-0\">\r\n");
      out.write("\t\t<!-- boardSidebar.jsp include -->\r\n");
      out.write("\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../../../boardSidebar.jsp", out, false);
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<section class=\"content boardList\" style=\"width: 100%;\">\r\n");
      out.write("\t\t\t<form name=\"boardForm\" id=\"boardForm\">\r\n");
      out.write("\t\t\t\t<div class=\"card\">\r\n");
      out.write("\t\t\t\t\t<div class=\"card-header\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"card-tools\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"input-group input-group-sm\" style=\"width: 440px; float: right; padding-top: 20px;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<select id=\"stype\" class=\"form-control stype\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"board_title\">제목</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"board_content\">내용</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t</select> \r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"text\" id=\"sword\" name=\"table_search\" class=\"form-control float-right\" placeholder=\"Search\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"input-group-append\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<button type=\"button\" id=\"searchMy\" class=\"btn btn-default\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<i class=\"fas fa-search\"></i>검색\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<h3 class=\"card-title\">");
      out.print(boardCategory );
      out.write("</h3>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<!-- card-header   -->\r\n");
      out.write("\t\r\n");
      out.write("\t\t\t\t\t<div class=\"card-body\">\r\n");
      out.write("\t\t\t\t\t\t<table class=\"table table-bordered\">\r\n");
      out.write("\t\t\t\t\t\t\t<thead>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th style=\"width: 6%; text-align: center;\">번호</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th style=\"width: px; text-align: center;\">제목</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th style=\"width: 12%; text-align: center;\">작성자</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th style=\"width: 12%; text-align: center;\">작성일</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th style=\"width: 10%; text-align: center;\">조회수</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t</thead>\r\n");
      out.write("\t\t\t\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t\t\t\t");

								if (boardList != null || boardList.size() > 0) {
								for (BoardVO boardVo : boardList) {
								
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr class =\"boardInfo\" writer =\"");
      out.print(boardVo.getMem_no() );
      out.write("\" idx=\"");
      out.print(boardVo.getBoard_no());
      out.write("\">\r\n");
      out.write("\t                                <td>");
      out.print(boardVo.getBoard_no());
      out.write("</td>\r\n");
      out.write("\t                                <td>");
      out.print(boardVo.getBoard_title());
      out.write("</td>\r\n");
      out.write("\t                                <td>");
      out.print(boardVo.getMem_name());
      out.write("</td>\r\n");
      out.write("\t                                <td>");
      out.print(boardVo.getBoard_date());
      out.write("</td>\r\n");
      out.write("\t                                <td>");
      out.print(boardVo.getBoard_hit());
      out.write("</td>\r\n");
      out.write("\t                             </tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t");

									}
								} else {
								
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td colspan=\"5\">작성된 게시글이 없습니다.</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t");

									}
								
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"card-body\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"button\" id=\"addBtn\" value=\"글쓰기\" class=\"btn btn-primary float-right\" style=\"float: right;\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<!-- card-body -->\r\n");
      out.write("\t\t\t\t\t<div class=\"card-footer clearfix\">\r\n");
      out.write("\t\t\t\t\t\t<ul class=\"pagination pagination-sm m-0 float-right\">\r\n");
      out.write("\t\t\t\t\t\t\t<li class=\"page-item\"><a class=\"page-link prev\" href=\"#\">&laquo;</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t");

							int startpage = (int)request.getAttribute("startpage"); //spage
							System.out.println("startpage" + startpage);
							
							int endpage = (int)request.getAttribute("endpage"); //epage
							System.out.println("endpage" +endpage);
							
							int totalpage = (int)request.getAttribute("totalpage"); //tpage
							System.out.println("totalpage" +totalpage);
							
							for(int i = startpage; i<= endpage; i++){ 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t<li class=\"page-item\"><a class=\"page-link pnums\" href=\"#\">");
      out.print(i );
      out.write("</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t");
} 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<li class=\"page-item\"><a class=\"page-link next\" href=\"#\">&raquo;</a></li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t</section>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("    <script src=\"https://code.jquery.com/jquery-3.4.1.min.js\"></script>\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("    <script src=\"");
      out.print(request.getContextPath());
      out.write("/lib/tempusdominus/js/tempusdominus-bootstrap-4.min.js\"></script>\r\n");
      out.write("    <script src=\"");
      out.print(request.getContextPath());
      out.write("/js/main.js\"></script>\r\n");
      out.write("    \r\n");
      out.write("\t<!-- \tfooter.jsp include -->\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../../../footer.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");

	Map<String, Object> loginInfo = (Map<String, Object>) session.getAttribute("loginInfo");
	boolean check = (boolean)session.getAttribute("isLogined");
	if(check){
		memberVo = (MemberVO)loginInfo.get("memberInfo");
	}
	boolean isWriter = true;	// 글쓰기에 대한 권한   true가 권한이 있다.
	
	if(categoryNo == 1){			// 공지사항
		if(memberVo.getMem_grade() != 9){		// 관리자가 아닌애들 
			isWriter = false;		// 관리자가 아니면 글쓰기 권한이 없다.
		}
      out.write("\r\n");
      out.write("\t\t$(function(){\r\n");
      out.write("\t\t\t$(\"#addBtn\").on(\"click\", function(){\r\n");
      out.write("\t\t\t\tif(");
      out.print(check);
      out.write("){\r\n");
      out.write("\t\t\t\t\tif(");
      out.print(isWriter);
      out.write("){\r\n");
      out.write("\t\t\t\t\t\tlocation.href = \"");
      out.print(request.getContextPath());
      out.write("/board/Insert.do\"; \r\n");
      out.write("\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\talert(\"접근권한이 없습니다.\")\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\talert(\"로그인이 필요합니다.\");\r\n");
      out.write("\t\t\t\t\tlocation.href = \"");
      out.print(request.getContextPath());
      out.write("/member/login.do\"; \r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\t$(\".boardInfo\").on(\"click\", function(){\r\n");
      out.write("\t\t\t\tboardNo = $(this).attr(\"idx\");\r\n");
      out.write("\t\t\t\tlocation.href = \"");
      out.print(request.getContextPath());
      out.write("/board/Read.do?board_no=\" + boardNo; \r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\r\n");
      out.write("\t");
}else if(categoryNo == 2){		// 문의게시판
			if(memberVo.getMem_grade() == 9){		// 관리자가 아닌애들 
				isWriter = false;		// 관리자가 아니면 글쓰기 권한이 없다.
			}
      out.write("\r\n");
      out.write("\t\t$(function(){\r\n");
      out.write("\t\t\t$(\"#addBtn\").on(\"click\", function(){\r\n");
      out.write("\t\t\t\tif(");
      out.print(check);
      out.write("){\r\n");
      out.write("\t\t\t\t\tif(");
      out.print(isWriter);
      out.write(" || ");
      out.print(memberVo.getMem_grade() ==9);
      out.write("){\r\n");
      out.write("\t\t\t\t\t\tlocation.href = \"");
      out.print(request.getContextPath());
      out.write("/board/Insert.do\"; \r\n");
      out.write("\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\talert(\"접근권한이 없습니다.\")\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\talert(\"로그인이 필요합니다.\");\r\n");
      out.write("\t\t\t\t\tlocation.href = \"");
      out.print(request.getContextPath());
      out.write("/member/login.do\"; \r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\r\n");
      out.write("\t\t\t$(\".boardInfo\").on(\"click\", function(){\r\n");
      out.write("\t\t\t\tif(");
      out.print(check);
      out.write("){\r\n");
      out.write("\t\t\t\t\tboardNo = $(this).attr(\"idx\");\r\n");
      out.write("\t\t\t\t\tif(");
      out.print(memberVo.getMem_no());
      out.write(" == $(this).attr(\"writer\") || ");
      out.print(memberVo.getMem_grade());
      out.write(" ==9 ) {\r\n");
      out.write("\t\t\t\t\t\tlocation.href = \"");
      out.print(request.getContextPath());
      out.write("/board/Read.do?board_no=\" + boardNo; \r\n");
      out.write("\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\talert(\"니 글이 아니다..\");\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\talert(\"비회원 접근 권한이 없습니다.\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t});");

	}else if(categoryNo == 3){			// 후기게시판
		if(memberVo.getMem_grade() == 9){		// 관리자가 아닌애들 
			isWriter = false;		// 관리자가 아니면 글쓰기 권한이 없다.
		}
		
      out.write("\r\n");
      out.write("\t\t$(function(){\r\n");
      out.write("\t\t\t$(\"#addBtn\").on(\"click\", function(){\r\n");
      out.write("\t\t\t\tif(");
      out.print(check);
      out.write("){\r\n");
      out.write("\t\t\t\t\tif(");
      out.print(isWriter);
      out.write("){\r\n");
      out.write("\t\t\t\t\t\tlocation.href = \"");
      out.print(request.getContextPath());
      out.write("/board/Insert.do\"; \r\n");
      out.write("\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\talert(\"접근권한이 없습니다.\");\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\talert(\"로그인이 필요합니다.\");\r\n");
      out.write("\t\t\t\t\tlocation.href = \"");
      out.print(request.getContextPath());
      out.write("/member/login.do\"; \r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\".boardInfo\").on(\"click\", function(){\r\n");
      out.write("\t\t\t\tboardNo = $(this).attr(\"idx\");\r\n");
      out.write("\t\t\t\tlocation.href = \"");
      out.print(request.getContextPath());
      out.write("/board/Read.do?board_no=\" + boardNo; \r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t});\r\n");
      out.write("\t");
}else if(categoryNo == 4){		// 홍보 게시판
		if(memberVo.getMem_grade() != 1){		// 관리자가 아닌애들 
			isWriter = false;		// 전문가가 아니면 글쓰기 권한이 없다.
		}
		
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(function(){\r\n");
      out.write("\t\t\t$(\"#addBtn\").on(\"click\", function(){\r\n");
      out.write("\t\t\t\tif(");
      out.print(check);
      out.write("){\r\n");
      out.write("\t\t\t\t\tif(");
      out.print(isWriter);
      out.write("){\r\n");
      out.write("\t\t\t\t\t\tlocation.href = \"");
      out.print(request.getContextPath());
      out.write("/board/Insert.do\"; \r\n");
      out.write("\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\talert(\"전문가만 글을 쓸 수 있습니다.\")\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\talert(\"로그인이 필요합니다.\");\r\n");
      out.write("\t\t\t\t\tlocation.href = \"");
      out.print(request.getContextPath());
      out.write("/member/login.do\"; \r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t$(\".boardInfo\").on(\"click\", function(){\r\n");
      out.write("\t\t\t\tboardNo = $(this).attr(\"idx\");\r\n");
      out.write("\t\t\t\tlocation.href = \"");
      out.print(request.getContextPath());
      out.write("/board/Read.do?board_no=\" + boardNo; \r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t});\r\n");
      out.write("\t ");
}else if(categoryNo == 5){			//자유게시판
		if(memberVo.getMem_grade() == 9){		// 관리자가 아닌애들 
			isWriter = false;		// 관리자가 아니면 글쓰기 권한이 없다.
		}
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(function(){\r\n");
      out.write("\t\t\t$(\"#addBtn\").on(\"click\", function(){\r\n");
      out.write("\t\t\t\tif(");
      out.print(check);
      out.write("){\r\n");
      out.write("\t\t\t\t\tif(");
      out.print(isWriter);
      out.write("){\r\n");
      out.write("\t\t\t\t\t\tlocation.href = \"");
      out.print(request.getContextPath());
      out.write("/board/Insert.do\"; \r\n");
      out.write("\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\talert(\"접근권한이 없습니다.\");\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\talert(\"로그인이 필요합니다.\");\r\n");
      out.write("\t\t\t\t\tlocation.href = \"");
      out.print(request.getContextPath());
      out.write("/member/login.do\"; \r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\".boardInfo\").on(\"click\", function(){\r\n");
      out.write("\t\t\t\tboardNo = $(this).attr(\"idx\");\r\n");
      out.write("\t\t\t\tlocation.href = \"");
      out.print(request.getContextPath());
      out.write("/board/Read.do?board_no=\" + boardNo; \r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t});\r\n");
}
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
